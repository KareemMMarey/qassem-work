@using QassimPrincipality.Application.Dtos
@using QassimPrincipality.Domain.Enums
@using QassimPrincipality.Web.Helpers.Business
@removeTagHelper "Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper, Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper"

@model ServiceRequestDto
@inject IViewLocalizer localizer

@{
    ViewData["Title"] = localizer["RequestDetails"].Value;
    // Helper functions:
    string FormatDate(DateTime date) => date == DateTime.MinValue ? localizer["NotFound"].Value : date.ToString("yyyy-MM-dd");
    string GetValue(string val) => string.IsNullOrEmpty(val) ? localizer["NotFound"].Value : val;
}

<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"]</title>
    @* <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.rtl.min.css"
          rel="stylesheet"
          integrity="sha384-+qdLaWWVBK4Fh7ZR4PQcqeZJ8QThM2i5iQx8X7XgjBVvu6coAIYm/2uN5wQKfXxB"
          crossorigin="anonymous" /> *@
    <style>
        /* Container background and padding */
        .page‐wrapper {
            background: #f6f6f6;
            padding: 30px 0;
        }
        /* White box for each section */
        .section‐box {
            background: #ffffff;
            border-radius: 8px;
            box-shadow: 0 2px 6px rgba(0,0,0,0.1);
            padding: 20px;
            margin-bottom: 30px;
        }

     
    </style>
</head>
<partial src=".\shared\requestdetails\_requestdetailsheader.cshtml"></partial>



@await Html.PartialAsync("../shared/requestdetails/_CompleteRequestModal.cshtml", Model,
                             new ViewDataDictionary(ViewData) { ["ParentLocalizer"] = localizer })


<body>
    <div class="container‐fluid page‐wrapper">
        <div class="container container-details">
                
            @await Html.PartialAsync("../shared/requestdetails/_RequestDetailsHeader.cshtml", Model
                     , new ViewDataDictionary(ViewData) { ["ParentLocalizer"] = localizer })

            

            <div class="row">
                @await Html.PartialAsync("../shared/requestdetails/_RequestStatusSection.cshtml", Model,
                         new ViewDataDictionary(ViewData) { ["ParentLocalizer"] = localizer })

               
                

                <!-- ======== بيانات مقدم الطلب ======== -->
                @await Html.PartialAsync("../shared/requestdetails/_RequesterData.cshtml", Model,
                         new ViewDataDictionary(ViewData) { ["ParentLocalizer"] = localizer })


               

                <!-- ======== بيانات المعني بالطلب ======== -->
                @await Html.PartialAsync("../shared/requestdetails/_AdditionalData.cshtml", Model,
                         new ViewDataDictionary(ViewData) { ["ParentLocalizer"] = localizer })




                <!-- ======== المرفقات ======== -->
                @await Html.PartialAsync("../shared/requestdetails/_AttachmentsSection.cshtml", Model,
                         new ViewDataDictionary(ViewData) { ["ParentLocalizer"] = localizer })

                @if (User.IsInRole("Admin"))
                {
                    @* <div class="pc-form-line"></div> *@
                    <div class="pc-service-form-heading">
                        <h4>@localizer["AdminDecision"]</h4>
                    </div>

                    <form asp-action="ChangeRequestStatus" method="post">
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <input type="hidden" name="RequestId" value="@Model.Id" />
                                <input type="hidden" name="UserId" value="@Model.UserId" />

                                <label class="form-label">@localizer["RequestStatus"]</label>

                            @removeTagHelper "Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper, Microsoft.AspNetCore.Mvc.TagHelpers"

                                <select name="NewStatus" class="form-select pc-search-select" required>
                                    @{
                                        var transitions = WorkFlowHelper.GetNextTransition(Model.Status);
                                    }
                                    @foreach (ServiceRequestStatus status in transitions)
                                    {
                                        var isSelected = Model.Status == status ? "selected" : "";
                                        <option value="@((int)status)" @isSelected>
                                            @WorkFlowHelper.GetStatusDisplay(status, localizer)
                                        </option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-12">
                                <label class="form-label">@localizer["Notes"]</label>
                                <textarea name="Notes" class="form-control" rows="4"
                                          id="notesTextArea"
                                @(Model.Status == ServiceRequestStatus.Rejected ? "required" : "")>
                </textarea>
                            </div>
                        </div>
                        <div class="pc-form-buttons">
                            <button type="submit" class="pc-primary-btn pc-btn-request">@localizer["Save"]</button>
                        </div>
                    </form>
                   @*  await Html.PartialAsync("../shared/requestdetails/_AdminDecisionSection.cshtml", Model,
                         new ViewDataDictionary(ViewData) { ["ParentLocalizer"] = localizer }); *@
                }

                <!-- ======== زر “الرجوع للطلبات” في الأسفل ======== -->
                <div class="text-end">
                    <a href="javascript:history.back()" class="btn btn-outline-secondary">
                        @localizer["Back"]
                    </a>
                </div>
            </div>
        </div>
    </div>
</body>


</html>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const statusSelect = document.getElementById('statusSelect');
        const notesTextArea = document.getElementById('notesTextArea');
        // Enum value for Rejected; adjust as needed
        const rejectedValue = '@((int)ServiceRequestStatus.Rejected)';

        function updateRequired() {
            if (statusSelect.value === rejectedValue) {
                notesTextArea.setAttribute('required', 'required');
            } else {
                notesTextArea.removeAttribute('required');
            }
        }
        statusSelect.addEventListener('change', updateRequired);
        updateRequired(); // call on load
    });
</script>
